{"version":3,"sources":["Reclamaciones.js","App.js","Login.js","reportWebVitals.js","index.js"],"names":["url","Reclamaciones","Component","constructor","super","arguments","this","state","data","modalInsertar","modalEliminar","form","id","id_cliente","DNI","fecha","detalle_reclamo","tipoModal","currentPage","itemsPerPage","peticionGet","axios","get","then","response","setState","catch","error","console","log","message","peticionPost","async","post","peticionPut","put","peticionDelete","delete","seleccionarReclamacion","reclamacion","handleChange","e","persist","[object Object]","target","name","value","handlePageChange","event","pageNumber","preventDefault","componentDidMount","render","indexOfLastItem","indexOfFirstItem","currentData","slice","pageNumbers","i","Math","ceil","length","push","React","createElement","className","Link","to","map","key","onClick","FontAwesomeIcon","icon","faTrashAlt","number","href","Modal","isOpen","ModalHeader","style","display","float","ModalBody","htmlFor","type","onChange","readOnly","ModalFooter","App","nombre","descripcion","image_path","precio","stock","reponse","seleccionarProducto","producto","Router","Routes","Route","path","element","Fragment","faEdit","loginUrl","registerUrl","Login","email","password","address","phone","password_confirmation","modalRegister","loggedIn","errorMessage","prevState","handleLogin","localStorage","setItem","token","handleRegister","toggleModalRegister","onSubmit","required","toggle","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"gTAUA,MAAMA,EAAM,oEAgNGC,MA9Mf,cAA4BC,YAAUC,cAAAC,SAAAC,WAAAC,KAEpCC,MAAQ,CACNC,KAAM,GACNC,eAAe,EACfC,eAAe,EACfC,KAAM,CACJC,GAAI,GACJC,WAAY,GACZC,IAAK,GACLC,MAAO,GACPC,gBAAiB,GACjBC,UAAW,IAEbC,YAAa,EACbC,aAAc,GACfb,KAEDc,YAAc,MACZC,IAAMC,IAAItB,GAAKuB,KAAKC,IAClBlB,KAAKmB,SAAS,CAAEjB,KAAMgB,EAAShB,SAC9BkB,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAEDyB,aAAeC,kBACN1B,KAAKC,MAAMI,KAAKC,SACjBS,IAAMY,KAAKjC,EAAKM,KAAKC,MAAMI,MAAMY,KAAKC,IAC1ClB,KAAKG,gBACLH,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAED4B,YAAc,MACZb,IAAMc,IAAInC,EAAM,IAAMM,KAAKC,MAAMI,KAAKC,GAAIN,KAAKC,MAAMI,MAAMY,KAAKC,IAC9DlB,KAAKG,gBACLH,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAED8B,eAAiB,MACff,IAAMgB,OAAOrC,EAAM,IAAMM,KAAKC,MAAMI,KAAKC,IAAIW,KAAKC,IAChDlB,KAAKmB,SAAS,CAAEf,eAAe,IAC/BJ,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAEDG,cAAgB,MACdH,KAAKmB,SAAS,CAAEhB,eAAgBH,KAAKC,MAAME,kBAC5CH,KAEDgC,uBAA0BC,KACxBjC,KAAKmB,SAAS,CACZR,UAAW,aACXN,KAAM,CACJC,GAAI2B,EAAY3B,GAChBC,WAAY0B,EAAY1B,WACxBC,IAAKyB,EAAYzB,IACjBC,MAAOwB,EAAYxB,MACnBC,gBAAiBuB,EAAYvB,qBAGlCV,KAEDkC,aAAeR,WACbS,EAAEC,gBACIpC,KAAKmB,SAAS,CAClBd,KAAM,IACDL,KAAKC,MAAMI,KACdgC,CAACF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,SAG9BlB,QAAQC,IAAIvB,KAAKC,MAAMI,QACxBL,KAMDyC,iBAAmB,EAACC,EAAOC,KACzBD,EAAME,iBACN5C,KAAKmB,SAAS,CAAEP,YAAa+B,MAN/BE,oBACE7C,KAAKc,cAQPgC,SACE,MAAMzC,KAAEA,EAAIH,KAAEA,EAAIU,YAAEA,EAAWC,aAAEA,GAAiBb,KAAKC,MAGjD8C,EAAkBnC,EAAcC,EAChCmC,EAAmBD,EAAkBlC,EACrCoC,EAAc/C,EAAKgD,MAAMF,EAAkBD,GAG3CI,EAAc,GACpB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKpD,EAAKqD,OAAS1C,GAAeuC,IAC1DD,EAAYK,KAAKJ,GAGnB,OACEK,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,KAAI,WACjBJ,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,kBAAiB,oBAGlCJ,IAAAC,cAAA,OAAKC,UAAU,gBAEbF,IAAAC,cAAA,SAAOC,UAAU,SACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,KACJD,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,UAAI,cAGRD,IAAAC,cAAA,aACGT,EAAYa,IAAI7B,GAEbwB,IAAAC,cAAA,MAAIK,IAAK9B,EAAY3B,IACnBmD,IAAAC,cAAA,UAAKzB,EAAY3B,IACjBmD,IAAAC,cAAA,UAAKzB,EAAY1B,YACjBkD,IAAAC,cAAA,UAAKzB,EAAYzB,KACjBiD,IAAAC,cAAA,UAAKzB,EAAYxB,OACjBgD,IAAAC,cAAA,UAAKzB,EAAYvB,iBACjB+C,IAAAC,cAAA,UAAID,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,KAAQhE,KAAKgC,uBAAuBC,GAAcjC,KAAKmB,SAAS,CAAEf,eAAe,MAAWqD,IAAAC,cAACO,IAAe,CAACC,KAAMC,YAO7KV,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,cACXR,EAAYW,IAAIM,GACfX,IAAAC,cAAA,MAAIK,IAAKK,EAAQT,UAAU,aACzBF,IAAAC,cAAA,KAAGM,QAAU7B,GAAMnC,KAAKyC,iBAAiBN,EAAGiC,GAASC,KAAK,KAAKV,UAAU,aACtES,OAOXX,IAAAC,cAACY,IAAK,CAACC,OAAQvE,KAAKC,MAAME,eACxBsD,IAAAC,cAACc,IAAW,CAACC,MAAO,CAAEC,QAAS,UAC7BjB,IAAAC,cAAA,QAAMe,MAAO,CAAEE,MAAO,SAAWX,QAASA,IAAMhE,KAAKG,iBAAiB,QAExEsD,IAAAC,cAACkB,IAAS,KACRnB,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,MAAK,MACpBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,KAAKjC,GAAG,KAAKyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKC,GAAKN,KAAKC,MAAMC,KAAKqD,OAAS,EAAGyB,UAAQ,IACvJvB,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,cAAa,cAC5BpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,aAAajC,GAAG,aAAayE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKE,WAAa,KAC3IkD,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,OAAM,OACrBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,MAAMjC,GAAG,MAAMyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKG,IAAM,KACtHiD,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,SACvBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,QAAQjC,GAAG,QAAQyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKI,MAAQ,KAC5HgD,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,mBAAkB,mBACjCpB,IAAAC,cAAA,YAAUC,UAAU,eAAepB,KAAK,kBAAkBjC,GAAG,kBAAkByE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKK,gBAAkB,OAGrJ+C,IAAAC,cAACuB,IAAW,KACgB,aAAzBjF,KAAKC,MAAMU,UACV8C,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,IAAMhE,KAAKyB,gBAAgB,YAE5DgC,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,IAAMhE,KAAK4B,eAAe,cAIrF6B,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,IAAMhE,KAAKG,iBAAiB,cAM5EsD,IAAAC,cAACY,IAAK,CAACC,OAAQvE,KAAKC,MAAMG,eACxBqD,IAAAC,cAACkB,IAAS,KAAC,8DAC6CvE,GAAQA,EAAKC,GAAG,KAExEmD,IAAAC,cAACuB,IAAW,KACVxB,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,IAAMhE,KAAK8B,kBAAkB,MACzE2B,IAAAC,cAAA,UAAQC,UAAU,oBAAoBK,QAASA,IAAMhE,KAAKmB,SAAS,CAAEf,eAAe,KAAU,YCrM5G,MAAMV,EAAM,qEAqOGwF,MAnOf,cAAkBtF,YAAUC,cAAAC,SAAAC,WAAAC,KAC1BC,MAAQ,CACNC,KAAM,GACNC,eAAe,EACfC,eAAe,EACfC,KAAM,CACJC,GAAI,GACJ6E,OAAQ,GACRC,YAAa,GACbC,WAAY,GACZC,OAAQ,GACRC,MAAO,GACP5E,UAAW,IAEbC,YAAa,EACbC,aAAc,GACfb,KAEDc,YAAc,MACZC,IAAMC,IAAItB,GAAKuB,KAAKC,IAClBlB,KAAKmB,SAAS,CAAEjB,KAAMgB,EAAShB,SAC9BkB,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAEDyB,aAAeC,kBACN1B,KAAKC,MAAMI,KAAKC,SACjBS,IAAMY,KAAKjC,EAAKM,KAAKC,MAAMI,MAAMY,KAAKuE,IAC1CxF,KAAKG,gBACLH,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAED4B,YAAc,MACZb,IAAMc,IAAInC,EAAM,IAAMM,KAAKC,MAAMI,KAAKC,GAAIN,KAAKC,MAAMI,MAAMY,KAAKC,IAC9DlB,KAAKG,gBACLH,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAED8B,eAAiB,MACff,IAAMgB,OAAOrC,EAAM,IAAMM,KAAKC,MAAMI,KAAKC,IAAIW,KAAKC,IAChDlB,KAAKmB,SAAS,CAAEf,eAAe,IAC/BJ,KAAKc,gBACJM,MAAMC,IACPC,QAAQC,IAAIF,EAAMG,aAErBxB,KAEDG,cAAgB,MACdH,KAAKmB,SAAS,CAAEhB,eAAgBH,KAAKC,MAAME,kBAC5CH,KAEDyF,oBAAuBC,KACrB1F,KAAKmB,SAAS,CACZR,UAAW,aACXN,KAAM,CACJC,GAAIoF,EAASpF,GACb6E,OAAQO,EAASP,OACjBC,YAAaM,EAASN,YACtBC,WAAYK,EAASL,WACrBC,OAAQI,EAASJ,OACjBC,MAAOG,EAASH,WAGrBvF,KAEDkC,aAAeR,WACbS,EAAEC,gBACIpC,KAAKmB,SAAS,CAClBd,KAAM,IACDL,KAAKC,MAAMI,KACdgC,CAACF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,SAG9BlB,QAAQC,IAAIvB,KAAKC,MAAMI,QACxBL,KAMDyC,iBAAmB,EAACC,EAAOC,KACzBD,EAAME,iBACN5C,KAAKmB,SAAS,CAAEP,YAAa+B,MAN/BE,oBACE7C,KAAKc,cAQPgC,SACE,MAAMzC,KAAEA,EAAIH,KAAEA,EAAIU,YAAEA,EAAWC,aAAEA,GAAiBb,KAAKC,MAGjD8C,EAAkBnC,EAAcC,EAChCmC,EAAmBD,EAAkBlC,EACrCoC,EAAc/C,EAAKgD,MAAMF,EAAkBD,GAG3CI,EAAc,GACpB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKpD,EAAKqD,OAAS1C,GAAeuC,IAC1DD,EAAYK,KAAKJ,GAGnB,OACEK,IAAAC,cAACiC,IAAM,KACLlC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,KAAI,WACjBJ,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,kBAAiB,oBAGlCJ,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACkC,IAAM,KACLnC,IAAAC,cAACmC,IAAK,CAACC,KAAK,IAAIC,QACdtC,IAAAC,cAAAD,IAAAuC,SAAA,KACEvC,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,KAAQhE,KAAKmB,SAAS,CAAEd,KAAM,KAAMM,UAAW,aAAeX,KAAKG,kBAAmB,oBACnIsD,IAAAC,cAAA,WAAMD,IAAAC,cAAA,WACND,IAAAC,cAAA,SAAOC,UAAU,SACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,KACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,cAGRD,IAAAC,cAAA,aACGT,EAAYa,IAAI4B,GAEbjC,IAAAC,cAAA,MAAIK,IAAK2B,EAASpF,IAChBmD,IAAAC,cAAA,UAAKgC,EAASpF,IACdmD,IAAAC,cAAA,UAAKgC,EAASP,QACd1B,IAAAC,cAAA,UAAKgC,EAASN,aACd3B,IAAAC,cAAA,UAAKgC,EAASL,YACd5B,IAAAC,cAAA,UAAKgC,EAASJ,QACd7B,IAAAC,cAAA,UAAKgC,EAASH,OACd9B,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,KAAQhE,KAAKyF,oBAAoBC,GAAW1F,KAAKG,kBAAmBsD,IAAAC,cAACO,IAAe,CAACC,KAAM+B,OACvI,IACDxC,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,KAAQhE,KAAKyF,oBAAoBC,GAAW1F,KAAKmB,SAAS,CAAEf,eAAe,MAAWqD,IAAAC,cAACO,IAAe,CAACC,KAAMC,YAQrKV,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,cACXR,EAAYW,IAAIM,GACfX,IAAAC,cAAA,MAAIK,IAAKK,EAAQT,UAAU,aACzBF,IAAAC,cAAA,KAAGM,QAAU7B,GAAMnC,KAAKyC,iBAAiBN,EAAGiC,GAASC,KAAK,KAAKV,UAAU,aACtES,OAOXX,IAAAC,cAACY,IAAK,CAACC,OAAQvE,KAAKC,MAAME,eACxBsD,IAAAC,cAACc,IAAW,CAACC,MAAO,CAAEC,QAAS,UAC7BjB,IAAAC,cAAA,QAAMe,MAAO,CAAEE,MAAO,SAAWX,QAASA,IAAMhE,KAAKG,iBAAiB,QAExEsD,IAAAC,cAACkB,IAAS,KACRnB,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,MAAK,MACpBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,KAAKjC,GAAG,KAAKyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKC,GAAKN,KAAKC,MAAMC,KAAKqD,OAAS,EAAGyB,UAAQ,IACvJvB,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,UAAS,UACxBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,SAASjC,GAAG,SAASyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAK8E,OAAS,KAC/H1B,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,eAAc,eAC7BpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,cAAcjC,GAAG,cAAcyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAK+E,YAAc,KAC9I3B,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,cAAa,UAC5BpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,aAAajC,GAAG,aAAayE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKgF,WAAa,KAC3I5B,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,UAAS,UACxBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,SAASjC,GAAG,SAASyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKiF,OAAS,KAC/H7B,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,SACvBpB,IAAAC,cAAA,SAAOC,UAAU,eAAemB,KAAK,OAAOvC,KAAK,QAAQjC,GAAG,QAAQyE,SAAU/E,KAAKkC,aAAcM,MAAOnC,EAAOA,EAAKkF,MAAQ,OAGhI9B,IAAAC,cAACuB,IAAW,KACgB,aAAzBjF,KAAKC,MAAMU,UACV8C,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,IAAMhE,KAAKyB,gBAAgB,YAE5DgC,IAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASA,IAAMhE,KAAK4B,eAAe,cAIrF6B,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,IAAMhE,KAAKG,iBAAiB,cAM5EsD,IAAAC,cAACY,IAAK,CAACC,OAAQvE,KAAKC,MAAMG,eACxBqD,IAAAC,cAACkB,IAAS,KAAC,wDAC0CvE,GAAQA,EAAK8E,OAAO,KAEzE1B,IAAAC,cAACuB,IAAW,KACVxB,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,QAASA,IAAMhE,KAAK8B,kBAAkB,MACzE2B,IAAAC,cAAA,UAAQC,UAAU,oBAAoBK,QAASA,IAAMhE,KAAKmB,SAAS,CAAEf,eAAe,KAAU,WAKtGqD,IAAAC,cAACmC,IAAK,CAACC,KAAK,iBAAiBC,QAAStC,IAAAC,cAAC/D,EAAa,cCjOlE,MAAMuG,EAAW,iEACXC,EAAc,oEA6ILC,MA3If,cAAoBxG,YAAUC,cAAAC,SAAAC,WAAAC,KAC5BC,MAAQ,CACNI,KAAM,CACJgG,MAAO,GACPC,SAAU,GACV/D,KAAM,GACNgE,QAAS,GACTC,MAAO,GACPC,sBAAuB,IAEzBC,eAAe,EACfC,UAAU,EACVC,aAAc,IACf5G,KAEDkC,aAAeC,KACb,MAAMI,KAAEA,EAAIC,MAAEA,GAAUL,EAAEG,OAC1BtC,KAAKmB,SAAS0F,IAAS,CACrBxG,KAAM,IACDwG,EAAUxG,KACbgC,CAACE,GAAOC,QAGbxC,KAED8G,YAAcpF,WACZS,EAAES,iBACF,MAAMyD,MAAEA,EAAKC,SAAEA,GAAatG,KAAKC,MAAMI,KACvC,IACE,MAAMa,QAAiBH,IAAMY,KAAKuE,EAAU,CAAEG,QAAOC,aACrDS,aAAaC,QAAQ,QAAS9F,EAAShB,KAAK+G,OAC5CjH,KAAKmB,SAAS,CAAEwF,UAAU,EAAMC,aAAc,KAC9C,MAAOvF,GACPC,QAAQC,IAAIF,EAAMG,SAClBxB,KAAKmB,SAAS,CAAEyF,aAAc,8CAEjC5G,KAEDkH,eAAiBxF,WACfS,EAAES,iBACF,MAAML,KAAEA,EAAI8D,MAAEA,EAAKE,QAAEA,EAAOC,MAAEA,EAAKF,SAAEA,EAAQG,sBAAEA,GAA0BzG,KAAKC,MAAMI,KACpF,GAAIiG,IAAaG,EAIjB,UACQ1F,IAAMY,KAAKwE,EAAa,CAAE5D,OAAM8D,QAAOE,UAASC,QAAOF,WAAUG,0BACvEzG,KAAKmH,sBACLnH,KAAKmB,SAAS,CAAEyF,aAAc,KAC9B,MAAOvF,GACPC,QAAQC,IAAIF,EAAMG,SAClBxB,KAAKmB,SAAS,CAAEyF,aAAc,gDAT9B5G,KAAKmB,SAAS,CAAEyF,aAAc,8BAWjC5G,KAEDmH,oBAAsB,MACpBnH,KAAKmB,SAAS,CAAEuF,eAAgB1G,KAAKC,MAAMyG,kBAG7C5D,SACE,MAAMzC,KAAEA,EAAIsG,SAAEA,EAAQD,cAAEA,EAAaE,aAAEA,GAAiB5G,KAAKC,MAE7D,OAAI0G,EACKlD,IAAAC,cAACwB,EAAG,MAIXzB,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIC,UAAU,+BAA8B,SAC3CiD,GAAgBnD,IAAAC,cAAA,OAAKC,UAAU,sBAAsBiD,GACtDnD,IAAAC,cAAA,QAAM0D,SAAUpH,KAAK8G,aACnBrD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,SACvBpB,IAAAC,cAAA,SAAOoB,KAAK,QAAQnB,UAAU,eAAerD,GAAG,QAAQiC,KAAK,QAAQC,MAAOnC,EAAKgG,MAAOtB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE/H5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,YAAW,YAC1BpB,IAAAC,cAAA,SAAOoB,KAAK,WAAWnB,UAAU,eAAerD,GAAG,WAAWiC,KAAK,WAAWC,MAAOnC,EAAKiG,SAAUvB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE3I5D,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,UAAQoB,KAAK,SAASnB,UAAU,6BAA4B,WAGhEF,IAAAC,cAAA,KAAGC,UAAU,oBAAmB,0BAAuBF,IAAAC,cAAA,UAAQC,UAAU,eAAeK,QAAShE,KAAKmH,qBAAqB,iBAMnI1D,IAAAC,cAACY,IAAK,CAACC,OAAQmC,EAAeY,OAAQtH,KAAKmH,qBACzC1D,IAAAC,cAACc,IAAW,CAAC8C,OAAQtH,KAAKmH,qBAAqB,YAC/C1D,IAAAC,cAACkB,IAAS,KACRnB,IAAAC,cAAA,QAAM0D,SAAUpH,KAAKkH,gBACnBzD,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,QAAO,QACtBpB,IAAAC,cAAA,SAAOoB,KAAK,OAAOnB,UAAU,eAAerD,GAAG,OAAOiC,KAAK,OAAOC,MAAOnC,EAAKkC,KAAMwC,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE3H5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,SACvBpB,IAAAC,cAAA,SAAOoB,KAAK,QAAQnB,UAAU,eAAerD,GAAG,QAAQiC,KAAK,QAAQC,MAAOnC,EAAKgG,MAAOtB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE/H5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,WAAU,WACzBpB,IAAAC,cAAA,SAAOoB,KAAK,OAAOnB,UAAU,eAAerD,GAAG,UAAUiC,KAAK,UAAUC,MAAOnC,EAAKkG,QAASxB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAEpI5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,SACvBpB,IAAAC,cAAA,SAAOoB,KAAK,OAAOnB,UAAU,eAAerD,GAAG,QAAQiC,KAAK,QAAQC,MAAOnC,EAAKmG,MAAOzB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE9H5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,YAAW,YAC1BpB,IAAAC,cAAA,SAAOoB,KAAK,WAAWnB,UAAU,eAAerD,GAAG,WAAWiC,KAAK,WAAWC,MAAOnC,EAAKiG,SAAUvB,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAE3I5D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOmB,QAAQ,yBAAwB,oBACvCpB,IAAAC,cAAA,SAAOoB,KAAK,WAAWnB,UAAU,eAAerD,GAAG,wBAAwBiC,KAAK,wBAAwBC,MAAOnC,EAAKoG,sBAAuB1B,SAAU/E,KAAKkC,aAAcmF,UAAQ,KAElL5D,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,UAAQoB,KAAK,SAASnB,UAAU,6BAA4B,iBAMtEF,IAAAC,cAACuB,IAAW,KACVxB,IAAAC,cAAA,UAAQC,UAAU,oBAAoBK,QAAShE,KAAKmH,qBAAqB,eCjItEI,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAvF,EAAA,GAAAlB,KAAAyG,EAAAC,KAAA,UAAqB1G,KAAK2G,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCCDU,IAASC,WAAWC,SAASC,eAAe,SACpDvF,OACHW,IAAAC,cAACD,IAAM6E,WAAU,KACf7E,IAAAC,cAAC0C,EAAK,QAOVmB","file":"static/js/main.d0f6bddb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst url = \"https://gregarious-victory-production.up.railway.app/api/reclamos\";\n\nclass Reclamaciones extends Component {\n\n  state = {\n    data: [],\n    modalInsertar: false,\n    modalEliminar: false,\n    form: {\n      id: '',\n      id_cliente: '',\n      DNI: '',\n      fecha: '',\n      detalle_reclamo: '',\n      tipoModal: ''\n    },\n    currentPage: 1,\n    itemsPerPage: 6\n  }\n\n  peticionGet = () => {\n    axios.get(url).then(response => {\n      this.setState({ data: response.data });\n    }).catch(error => {\n      console.log(error.message);\n    })\n  }\n\n  peticionPost = async () => {\n    delete this.state.form.id;\n    await axios.post(url, this.state.form).then(response => {\n      this.modalInsertar();\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    })\n  }\n\n  peticionPut = () => {\n    axios.put(url + \"/\" + this.state.form.id, this.state.form).then(response => {\n      this.modalInsertar();\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  peticionDelete = () => {\n    axios.delete(url + \"/\" + this.state.form.id).then(response => {\n      this.setState({ modalEliminar: false });\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    })\n  }\n\n  modalInsertar = () => {\n    this.setState({ modalInsertar: !this.state.modalInsertar });\n  }\n\n  seleccionarReclamacion = (reclamacion) => {\n    this.setState({\n      tipoModal: 'actualizar',\n      form: {\n        id: reclamacion.id,\n        id_cliente: reclamacion.id_cliente,\n        DNI: reclamacion.DNI,\n        fecha: reclamacion.fecha,\n        detalle_reclamo: reclamacion.detalle_reclamo\n      }\n    })\n  }\n\n  handleChange = async e => {\n    e.persist();\n    await this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n    console.log(this.state.form);\n  }\n\n  componentDidMount() {\n    this.peticionGet();\n  }\n\n  handlePageChange = (event, pageNumber) => {\n    event.preventDefault();\n    this.setState({ currentPage: pageNumber });\n  }\n\n  render() {\n    const { form, data, currentPage, itemsPerPage } = this.state;\n\n    // Filtra los datos para la página actual\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentData = data.slice(indexOfFirstItem, indexOfLastItem);\n\n    // Calcular el número total de páginas\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"sidebar\">\n          <h2>Menú</h2>\n          <ul>\n            <li><Link to=\"/\">INICIO</Link></li>\n            <li><Link to=\"/reclamaciones\">RECLAMACIONES</Link></li>\n          </ul>\n        </div>\n        <div className='main-content'>\n          \n          <table className='table'>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>ID Cliente</th>\n                <th>DNI</th>\n                <th>Fecha</th>\n                <th>Detalle Reclamo</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              {currentData.map(reclamacion => {\n                return (\n                  <tr key={reclamacion.id}>\n                    <td>{reclamacion.id}</td>\n                    <td>{reclamacion.id_cliente}</td>\n                    <td>{reclamacion.DNI}</td>\n                    <td>{reclamacion.fecha}</td>\n                    <td>{reclamacion.detalle_reclamo}</td>\n                    <td><button className='btn btn-danger' onClick={() => { this.seleccionarReclamacion(reclamacion); this.setState({ modalEliminar: true }) }}><FontAwesomeIcon icon={faTrashAlt} /></button></td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n\n          <nav>\n            <ul className='pagination'>\n              {pageNumbers.map(number => (\n                <li key={number} className='page-item'>\n                  <a onClick={(e) => this.handlePageChange(e, number)} href='!#' className='page-link'>\n                    {number}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </nav>\n\n          <Modal isOpen={this.state.modalInsertar}>\n            <ModalHeader style={{ display: 'block' }}>\n              <span style={{ float: 'right' }} onClick={() => this.modalInsertar()}> X </span>\n            </ModalHeader>\n            <ModalBody>\n              <div className='form-group'>\n                <label htmlFor='id'>ID</label>\n                <input className='form-control' type=\"text\" name=\"id\" id=\"id\" onChange={this.handleChange} value={form ? form.id : this.state.data.length + 2} readOnly />\n                <br />\n                <label htmlFor='id_cliente'>ID Cliente</label>\n                <input className='form-control' type=\"text\" name=\"id_cliente\" id=\"id_cliente\" onChange={this.handleChange} value={form ? form.id_cliente : ''} />\n                <br />\n                <label htmlFor='DNI'>DNI</label>\n                <input className='form-control' type=\"text\" name=\"DNI\" id=\"DNI\" onChange={this.handleChange} value={form ? form.DNI : ''} />\n                <br />\n                <label htmlFor='fecha'>Fecha</label>\n                <input className='form-control' type=\"text\" name=\"fecha\" id=\"fecha\" onChange={this.handleChange} value={form ? form.fecha : ''} />\n                <br />\n                <label htmlFor='detalle_reclamo'>Detalle Reclamo</label>\n                <textarea className='form-control' name=\"detalle_reclamo\" id=\"detalle_reclamo\" onChange={this.handleChange} value={form ? form.detalle_reclamo : ''}></textarea>\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              {this.state.tipoModal === 'insertar' ?\n                <button className='btn btn-success' onClick={() => this.peticionPost()}>\n                  INSERTAR\n                </button> : <button className='btn btn-primary' onClick={() => this.peticionPut()}>\n                  ACTUALIZAR\n                </button>\n              }\n              <button className='btn btn-danger' onClick={() => this.modalInsertar()}>\n                CANCELAR\n              </button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalEliminar}>\n            <ModalBody>\n              ¿Estas Seguro de que quieres eliminar la reclamación {form && form.id}?\n            </ModalBody>\n            <ModalFooter>\n              <button className='btn btn-danger' onClick={() => this.peticionDelete()}>SI</button>\n              <button className='btn btn-secondary' onClick={() => this.setState({ modalEliminar: false })}>NO</button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Reclamaciones;\n\n\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport './index.css';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Reclamaciones from './Reclamaciones';\n\nconst url = \"https://gregarious-victory-production.up.railway.app/api/productos\";\n\nclass App extends Component {\n  state = {\n    data: [],\n    modalInsertar: false,\n    modalEliminar: false,\n    form: {\n      id: '',\n      nombre: '',\n      descripcion: '',\n      image_path: '',\n      precio: '',\n      stock: '',\n      tipoModal: ''\n    },\n    currentPage: 1,\n    itemsPerPage: 6\n  };\n\n  peticionGet = () => {\n    axios.get(url).then(response => {\n      this.setState({ data: response.data });\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  peticionPost = async () => {\n    delete this.state.form.id;\n    await axios.post(url, this.state.form).then(reponse => {\n      this.modalInsertar();\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  peticionPut = () => {\n    axios.put(url + \"/\" + this.state.form.id, this.state.form).then(response => {\n      this.modalInsertar();\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  peticionDelete = () => {\n    axios.delete(url + \"/\" + this.state.form.id).then(response => {\n      this.setState({ modalEliminar: false });\n      this.peticionGet();\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  modalInsertar = () => {\n    this.setState({ modalInsertar: !this.state.modalInsertar });\n  }\n\n  seleccionarProducto = (producto) => {\n    this.setState({\n      tipoModal: 'actualizar',\n      form: {\n        id: producto.id,\n        nombre: producto.nombre,\n        descripcion: producto.descripcion,\n        image_path: producto.image_path,\n        precio: producto.precio,\n        stock: producto.stock\n      }\n    });\n  }\n\n  handleChange = async e => {\n    e.persist();\n    await this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n    console.log(this.state.form);\n  }\n\n  componentDidMount() {\n    this.peticionGet();\n  }\n\n  handlePageChange = (event, pageNumber) => {\n    event.preventDefault();\n    this.setState({ currentPage: pageNumber });\n  }\n\n  render() {\n    const { form, data, currentPage, itemsPerPage } = this.state;\n\n    // Filtra los datos para la página actual\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentData = data.slice(indexOfFirstItem, indexOfLastItem);\n\n    // Calcular el número total de páginas\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"sidebar\">\n            <h2>Menú</h2>\n            <ul>\n              <li><Link to=\"/\">INICIO</Link></li>\n              <li><Link to=\"/reclamaciones\">RECLAMACIONES</Link></li>\n            </ul>\n          </div>\n          <div className='main-content'>\n            <Routes>\n              <Route path=\"/\" element={\n                <>\n                  <br />\n                  <button className='btn btn-success' onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.modalInsertar() }}>Agregar Producto</button>\n                  <br /><br />\n                  <table className='table'>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>NOMBRE</th>\n                        <th>DESCRIPCION</th>\n                        <th>IMAGEN</th>\n                        <th>PRECIO</th>\n                        <th>STOCK</th>\n                        <th>ACCIONES</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentData.map(producto => {\n                        return (\n                          <tr key={producto.id}>\n                            <td>{producto.id}</td>\n                            <td>{producto.nombre}</td>\n                            <td>{producto.descripcion}</td>\n                            <td>{producto.image_path}</td>\n                            <td>{producto.precio}</td>\n                            <td>{producto.stock}</td>\n                            <td>\n                              <button className='btn btn-primary' onClick={() => { this.seleccionarProducto(producto); this.modalInsertar() }}><FontAwesomeIcon icon={faEdit} /></button>\n                              {\" \"}\n                              <button className='btn btn-danger' onClick={() => { this.seleccionarProducto(producto); this.setState({ modalEliminar: true }) }}><FontAwesomeIcon icon={faTrashAlt} /></button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n\n                  <nav>\n                    <ul className='pagination'>\n                      {pageNumbers.map(number => (\n                        <li key={number} className='page-item'>\n                          <a onClick={(e) => this.handlePageChange(e, number)} href='!#' className='page-link'>\n                            {number}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </nav>\n\n                  <Modal isOpen={this.state.modalInsertar}>\n                    <ModalHeader style={{ display: 'block' }}>\n                      <span style={{ float: 'right' }} onClick={() => this.modalInsertar()}> X </span>\n                    </ModalHeader>\n                    <ModalBody>\n                      <div className='form-group'>\n                        <label htmlFor='id'>ID</label>\n                        <input className='form-control' type=\"text\" name=\"id\" id=\"id\" onChange={this.handleChange} value={form ? form.id : this.state.data.length + 2} readOnly />\n                        <br />\n                        <label htmlFor='nombre'>NOMBRE</label>\n                        <input className='form-control' type=\"text\" name=\"nombre\" id=\"nombre\" onChange={this.handleChange} value={form ? form.nombre : ''} />\n                        <br />\n                        <label htmlFor='descripcion'>DESCRIPCION</label>\n                        <input className='form-control' type=\"text\" name=\"descripcion\" id=\"descripcion\" onChange={this.handleChange} value={form ? form.descripcion : ''} />\n                        <br />\n                        <label htmlFor='image_path'>IMAGEN</label>\n                        <input className='form-control' type=\"text\" name=\"image_path\" id=\"image_path\" onChange={this.handleChange} value={form ? form.image_path : ''} />\n                        <br />\n                        <label htmlFor='precio'>PRECIO</label>\n                        <input className='form-control' type=\"text\" name=\"precio\" id=\"precio\" onChange={this.handleChange} value={form ? form.precio : ''} />\n                        <br />\n                        <label htmlFor='stock'>STOCK</label>\n                        <input className='form-control' type=\"text\" name=\"stock\" id=\"stock\" onChange={this.handleChange} value={form ? form.stock : ''} />\n                      </div>\n                    </ModalBody>\n                    <ModalFooter>\n                      {this.state.tipoModal === 'insertar' ?\n                        <button className='btn btn-success' onClick={() => this.peticionPost()}>\n                          INSERTAR\n                        </button> : <button className='btn btn-primary' onClick={() => this.peticionPut()}>\n                          ACTUALIZAR\n                        </button>\n                      }\n                      <button className='btn btn-danger' onClick={() => this.modalInsertar()}>\n                        CANCELAR\n                      </button>\n                    </ModalFooter>\n                  </Modal>\n\n                  <Modal isOpen={this.state.modalEliminar}>\n                    <ModalBody>\n                      ¿Estas Seguro de que quieres eliminar el producto {form && form.nombre}?\n                    </ModalBody>\n                    <ModalFooter>\n                      <button className='btn btn-danger' onClick={() => this.peticionDelete()}>SI</button>\n                      <button className='btn btn-secondary' onClick={() => this.setState({ modalEliminar: false })}>NO</button>\n                    </ModalFooter>\n                  </Modal>\n                </>\n              } />\n              <Route path=\"/reclamaciones\" element={<Reclamaciones />} />\n            </Routes>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport App from './App';\n\nconst loginUrl = \"https://gregarious-victory-production.up.railway.app/api/login\";\nconst registerUrl = \"https://gregarious-victory-production.up.railway.app/api/register\";\n\nclass Login extends Component {\n  state = {\n    form: {\n      email: '',\n      password: '',\n      name: '',\n      address: '',\n      phone: '',\n      password_confirmation: ''\n    },\n    modalRegister: false,\n    loggedIn: false,\n    errorMessage: ''\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      form: {\n        ...prevState.form,\n        [name]: value\n      }\n    }));\n  }\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const { email, password } = this.state.form;\n    try {\n      const response = await axios.post(loginUrl, { email, password });\n      localStorage.setItem('token', response.data.token);\n      this.setState({ loggedIn: true, errorMessage: '' });\n    } catch (error) {\n      console.log(error.message);\n      this.setState({ errorMessage: 'Invalid credentials. Please try again.' });\n    }\n  }\n\n  handleRegister = async e => {\n    e.preventDefault();\n    const { name, email, address, phone, password, password_confirmation } = this.state.form;\n    if (password !== password_confirmation) {\n      this.setState({ errorMessage: 'Passwords do not match.' });\n      return;\n    }\n    try {\n      await axios.post(registerUrl, { name, email, address, phone, password, password_confirmation });\n      this.toggleModalRegister();\n      this.setState({ errorMessage: '' });\n    } catch (error) {\n      console.log(error.message);\n      this.setState({ errorMessage: 'Registration failed. Please try again.' });\n    }\n  }\n\n  toggleModalRegister = () => {\n    this.setState({ modalRegister: !this.state.modalRegister });\n  }\n\n  render() {\n    const { form, loggedIn, modalRegister, errorMessage } = this.state;\n\n    if (loggedIn) {\n      return <App />;\n    }\n\n    return (\n      <div className=\"container login-container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-20\">\n            <div className=\"card login-form \">\n              <div className=\"card-body\">\n                <h3 className=\"card-title text-center mb-4\">Login</h3>\n                {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n                <form onSubmit={this.handleLogin}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={form.email} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={form.password} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n                  </div>\n                </form>\n                <p className=\"mt-3 text-center\">Don't have an account? <button className=\"btn btn-link\" onClick={this.toggleModalRegister}>Register</button></p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal isOpen={modalRegister} toggle={this.toggleModalRegister}>\n          <ModalHeader toggle={this.toggleModalRegister}>Register</ModalHeader>\n          <ModalBody>\n            <form onSubmit={this.handleRegister}>\n              <div className=\"card register-form\">\n                <div className=\"card-body\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={form.name} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={form.email} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"address\">Address</label>\n                    <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" value={form.address} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input type=\"text\" className=\"form-control\" id=\"phone\" name=\"phone\" value={form.phone} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={form.password} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password_confirmation\">Confirm Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password_confirmation\" name=\"password_confirmation\" value={form.password_confirmation} onChange={this.handleChange} required />\n                  </div>\n                  <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Register</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"btn btn-secondary\" onClick={this.toggleModalRegister}>Cancel</button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Reclamaciones from './Reclamaciones';\nimport Login from './Login';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Login/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}